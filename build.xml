<project name="PSOFeedImporter" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<description>PSO Feed Importer for Rhythmyx 6.7</description>
	<!-- =================================
	Download and install Ivy2 from http://ant.apache.org/ivy
    Modify your Ant runtime preferences in Eclipse to include the Ivy JARs
    Setup your ivy-local.properties  for your user / environment (see the sample file)
    
    To build for the first time: 
    1) Run the ivy-retrieve target
    2) In Project Properties, add all JARs in the ivylib folder. 
    3) Build (using the testbuild and dist targets)
    4) Run the ivy-publish target 
    
    You should occasionally refresh (with ivy-retrieve) and
    do ivy-publish each time a new build is released. 
    
   	-->
	<!-- set global properties for this build -->
    
	<property environment="env"/>
	<!-- base directory of Rhythmyx installation --> 
	<property name="rhythmyx.home" location="${env.RHYTHMYX_HOME}"/>
	<!-- name of Rhythmyx Service -->
	<property name="rhythmyx.service" value="${env.RHYTHMYX_SERVICE}"/>
	<property name="basename" value="PSOFeedImporter-6.7" /> 
	
	
	<property name="rhythmyx.deploy" value="${rhythmyx.home}/AppServer/server/rx/deploy" /> 
	<property name="rhythmyx.rxapp"  value="${rhythmyx.deploy}/rxapp.ear/rxapp.war" /> 
	<property name="rhythmyx.rxpub"  value="${rhythmyx.deploy}/RxServices.war"/> 
	<property name="rhythmyx.rxapp.lib"    value="${rhythmyx.rxapp}/WEB-INF/lib"/>
	<property name="rhythmyx.server.lib"  value="${rhythmyx.home}/AppServer/server/rx/lib" /> 
	<property name="rhythmyx.rxapp.spring-config"
	value="${rhythmyx.rxapp}/WEB-INF/config/user/spring" />
	<property name="rhythmyx.rxapp.WEB-INF" value="${rhythmyx.rxapp}/WEB-INF" />

	<!-- relative paths -->
	<property name="src" location="src"/>
	<property name="lib" location="lib"/>
	<property name="bin" location="bin"/>
	<property name="ivylib" location="ivylib" /> 
	<property name="javadoc" location="javadoc" />
	
	<!-- used for running Windows commands --> 
	<property name="comspec" location="${env.ComSpec}"/>
	<property name="cdrive" location="${env.USERPROFILE}"/> 
	
	<property name="vbox.vmname" value="RXBase_1" /> 
	
	<!-- Rhythmyx classpath  --> 
	<path id="rx.class.path"> 
		 <fileset dir="${ivylib}">
		 	<include name="**.jar"/>
		 </fileset>
		</path>
	

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
	</target>
	
	<target name="ivy-clean" depends="ivy-configure">
		<ivy:cleancache />
		<delete dir="${ivylib}" /> 
		<mkdir dir="${ivylib}" />
	</target>
	
	<target name="clean" description="clean up">
		<delete dir="${bin}"/>
		<mkdir dir="${bin}"/>
	</target>
	
	<target name="ivy-configure">
	   <ivy:settings />
    </target>

	<target name="ivy-resolve" depends="ivy-configure" >
	   <ivy:resolve conf="test,optional"/> 
	</target>
	
	<target name="ivy-retrieve" depends="ivy-resolve">
	   <ivy:retrieve pattern="${ivylib}/[artifact].[ext]" type="jar" conf="test" />   	
	</target>
	
	<!-- report on dependencies -->
	<target name="ivy-report" depends="ivy-resolve">
	  <ivy:report conf="test,optional"  graph="false" /> 
	</target>
	
	<target name="ivy-publish" depends="ivy-resolve"  >
		<ivy:publish resolver="foo-shared-sftp" forcedeliver="true"  
			pubrevision="6.6" overwrite="true" >
			<artifacts pattern="${lib}/[artifact]-[revision].[ext]" /> 
		</ivy:publish>
	</target>
	
	<target name="compile" description="compile the source ">
		<!-- Compile the java code from ${src} into ${bin} -->
		<javac srcdir="${src}" destdir="${bin}" debug="true" target="1.6" source="1.6" classpathref="rx.class.path" includeantruntime="false"/>
		<copy todir="${bin}">
    		<fileset dir="${src}">
      			<include name="**/*.xml"/>
    			<include name="**/*.properties" />
    			<include name="**/*.jpg" />
    			<include name="**/*.gif" />
    			<include name="**/*.png" />
    		</fileset>
  		</copy>
	</target>
	
	<target name="javadoc" depends="compile">
		<mkdir dir="javadoc"/>
		<javadoc destdir="javadoc" private="true" use="yes" 
		windowtitle="${ant.project.name}">
			<packageset dir="${src}" defaultexcludes="yes">
				<include name="com/percussion/**"/>	
			</packageset>
			<classpath refid="rx.class.path"/>
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
			<link href="http://java.sun.com/j2ee/1.4/docs/api/" />
			<link href="http://static.springframework.org/spring/docs/2.0.x/api/" />
			<link href="http://commons.apache.org/logging/javadocs/" />
		</javadoc>
	</target>
		
	<target name="jarbuilder" depends="compile" description="just build the jar, no server">
		<propertyfile file="${bin}/build.properties">
			<entry key="build.number" value="${build.number}"/>
			<entry key="build.date" type="date" pattern="EEEE MMM dd yyyy" value="now"/>
    	</propertyfile>
		<!-- NOTE: This is meant to be installed as part of the package.  so the jarname should
			not include the build number.  -->
		<property name="jarname" value="${basename}.jar" />
		
		<jar jarfile="${lib}/${jarname}" basedir="${bin}">
			<include name="com/percussion/pso/**"/>
			<exclude name="log4j.properties" /> 
			<include name="build.properties" /> 
			<include name="readme.txt" />			
		</jar>

	</target>
	<!-- set global properties for this build -->

	<target name="dist" depends="init, clean, javadoc" description="generate the distribution">
		<buildnumber/>
		<antcall target="jarbuilder"/>	
		<!-- Stamp the zips with the build number so we can tell if the package was installed 
		correctly with the package installer, or in a roque install at the shell
		-->	
		<property name="distfile" value="${basename}.zip" />	
		<property name="zipprefix" value="${basename}.${build.number}"/>	
		
		<zip destfile="${distfile}">						
			<zipfileset dir="${lib}" includes="${jarname}" prefix="${zipprefix}/lib" />
			<zipfileset dir="." includes="readme.txt, deploy.xml, install.sh" prefix="${zipprefix}" />
			<zipfileset dir="." includes="license.txt, Extensions.xml, Install.bat"  prefix="${zipprefix}" />
			<zipfileset dir="${ivylib}" includes="rome.jar"  prefix="${zipprefix}/lib" />  
			<zipfileset dir="${ivylib}" includes="jdom.jar"  prefix="${zipprefix}/lib" />  
			<zipfileset dir="${bin}" includes="build.properties"  prefix="${zipprefix}" />  			
			<zipfileset dir="WEB-INF" prefix="${zipprefix}/WEB-INF" />
			<zipfileset dir="${javadoc}" prefix="${zipprefix}/javadoc" />	
			<zipfileset dir="Rhythmyx" prefix="${zipprefix}/Rhythmyx" />
		</zip>
			
	</target>	

</project>